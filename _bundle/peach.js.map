{"version":3,"sources":["main.js","Application.js","danmaku.js","danmaku_stage1.js","Bullet.js","Ground.js","Label.js","Player.js","ThreeElement.js","Vox.js","VoxAsset.js","Particle.js","GameScene.js","LoadingScene.js","Sequence.js","TestScene.js","TitleScene.js"],"names":[],"mappingsjtRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvphrJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"peach.js","sourcesContent":["var W = 480 * 1;\r\nvar H = 320 * 1;\r\n\r\nphina.main(function() {\r\n  var app = peach.Application();\r\n  app.run();\r\n  \r\n  app.enableStats();\r\n});\r\n","phina.namespace(function() {\r\n\r\n  phina.define(\"peach.Application\", {\r\n    superClass: \"phina.display.CanvasApp\",\r\n    \r\n    gamepadManager: null,\r\n\r\n    init: function() {\r\n      this.superInit({\r\n        fps: 60,\r\n        width: W,\r\n        height: H,\r\n      });\r\n      \r\n      this.gamepadManager = phina.input.GamepadManager();\r\n      \r\n      this.replaceScene(peach.MainSequance());\r\n    },\r\n\r\n    update: function() {\r\n      this.mouse.update();\r\n      this.touch.update();\r\n      this.touchList.update();\r\n      this.keyboard.update();\r\n      this.gamepadManager.update();\r\n    },\r\n\r\n  });\r\n\r\n});\r\n","phina.namespace(function() {\r\n\r\n  peach.danmaku = peach.danmaku || {};\r\n\r\n  var action = bulletml.dsl.action;\r\n  var actionRef = bulletml.dsl.actionRef;\r\n  var bullet = bulletml.dsl.bullet;\r\n  var bulletRef = bulletml.dsl.bulletRef;\r\n  var fire = bulletml.dsl.fire;\r\n  var fireRef = bulletml.dsl.fireRef;\r\n  var changeDirection = bulletml.dsl.changeDirection;\r\n  var changeSpeed = bulletml.dsl.changeSpeed;\r\n  var accel = bulletml.dsl.accel;\r\n  var wait = bulletml.dsl.wait;\r\n  var vanish = bulletml.dsl.vanish;\r\n  var repeat = bulletml.dsl.repeat;\r\n  var bindVar = bulletml.dsl.bindVar;\r\n  var notify = bulletml.dsl.notify;\r\n  var direction = bulletml.dsl.direction;\r\n  var speed = bulletml.dsl.speed;\r\n  var horizontal = bulletml.dsl.horizontal;\r\n  var vertical = bulletml.dsl.vertical;\r\n  var fireOption = bulletml.dsl.fireOption;\r\n  var offsetX = bulletml.dsl.offsetX;\r\n  var offsetY = bulletml.dsl.offsetY;\r\n  var autonomy = bulletml.dsl.autonomy;\r\n\r\n  var interval = function(v) {\r\n    return wait(\"{0} * (0.3 + (1.0 - $densityRank) * 0.7)\".format(v));\r\n  };\r\n  var spd = function(v) {\r\n    return speed(\"{0} * (1.0 + $speedRank * 2.0)\".format(v));\r\n  };\r\n  var spdSeq = function(v) {\r\n    return speed(\"{0} * (1.0 + $speedRank * 2.0)\".format(v), \"sequence\");\r\n  };\r\n\r\n  var R0 = bullet({\r\n    type: 4\r\n  });\r\n  var R1 = bullet({\r\n    type: 5\r\n  });\r\n  var R2 = bullet({\r\n    type: 6\r\n  });\r\n  var R3 = bullet({\r\n    type: 7\r\n  });\r\n  var B4 = bullet({\r\n    type: 8\r\n  });\r\n  var B5 = bullet({\r\n    type: 9\r\n  });\r\n  var R4 = bullet({\r\n    type: 10\r\n  });\r\n  var R5 = bullet({\r\n    type: 11\r\n  });\r\n  var DM = bullet({\r\n    dummy: true\r\n  });\r\n\r\n  // ザコヘリ用\r\n  var basic = function(s, dir) {\r\n    return new bulletml.Root({\r\n      top: action([\r\n        interval(10),\r\n        repeat(Infinity, [\r\n          fire(DM, spd(s), direction(dir)),\r\n          repeat(\"$burst + 1\", [\r\n            fire(R2, spdSeq(0.15), direction(0, \"sequence\")),\r\n          ]),\r\n          interval(50),\r\n        ]),\r\n      ]),\r\n    });\r\n  };\r\n  peach.danmaku.basic = basic(1, 0);\r\n  peach.danmaku.basicR1 = basic(1, -5);\r\n  peach.danmaku.basicL1 = basic(1, +5);\r\n  peach.danmaku.basicR2 = basic(1, -15);\r\n  peach.danmaku.basicL2 = basic(1, +15);\r\n  peach.danmaku.basicF = basic(1.2, 0);\r\n  peach.danmaku.basicFR1 = basic(1.2, -5);\r\n  peach.danmaku.basicFL1 = basic(1.2, +5);\r\n  peach.danmaku.basicFR2 = basic(1.2, -15);\r\n  peach.danmaku.basicFL2 = basic(1.2, +15);\r\n\r\n  // ザコヘリ3way\r\n  var basic3way = function(dir) {\r\n    return new bulletml.Root({\r\n      top: action([\r\n        interval(10),\r\n        repeat(Infinity, [\r\n          fire(DM, spd(1), direction(dir - 7)),\r\n          repeat(\"$burst + 1\", [\r\n            fire(R2, spdSeq(0), direction(0, \"sequence\")),\r\n            fire(R2, spdSeq(0), direction(7, \"sequence\")),\r\n            fire(R2, spdSeq(0), direction(7, \"sequence\")),\r\n            fire(DM, spdSeq(0.05), direction(-14, \"sequence\")),\r\n          ]),\r\n          interval(50),\r\n        ]),\r\n      ]),\r\n    });\r\n  };\r\n  peach.danmaku.basic3way = basic3way(0);\r\n  peach.danmaku.basic3wayR1 = basic3way(-5);\r\n  peach.danmaku.basic3wayL1 = basic3way(+5);\r\n  peach.danmaku.basic3wayR2 = basic3way(-15);\r\n  peach.danmaku.basic3wayL2 = basic3way(+15);\r\n\r\n  // ザコ戦車用\r\n  var forward = function(s, dir) {\r\n    return new bulletml.Root({\r\n      top: action([\r\n        interval(10),\r\n        repeat(Infinity, [\r\n          repeat(3, [\r\n            fire(DM, spd(s), direction(dir, \"relative\")),\r\n            repeat(\"$burst + 1\", [\r\n              fire(R2, spdSeq(0.15), direction(0, \"sequence\")),\r\n            ]),\r\n            interval(10),\r\n          ]),\r\n          interval(50),\r\n        ]),\r\n      ]),\r\n    });\r\n  };\r\n  peach.danmaku.forward = forward(1, 0);\r\n  peach.danmaku.forwardR1 = forward(1, -5);\r\n  peach.danmaku.forwardL1 = forward(1, +5);\r\n  peach.danmaku.forwardR2 = forward(1, -15);\r\n  peach.danmaku.forwardL2 = forward(1, +15);\r\n  peach.danmaku.forwardF = forward(1.2, 0);\r\n  peach.danmaku.forwardFR1 = forward(1.2, -5);\r\n  peach.danmaku.forwardFL1 = forward(1.2, +5);\r\n  peach.danmaku.forwardFR2 = forward(1.2, -15);\r\n  peach.danmaku.forwardFL2 = forward(1.2, +15);\r\n\r\n  // ザコ戦車3way\r\n  var forward3way = function(s, dir) {\r\n    return new bulletml.Root({\r\n      top: action([\r\n        interval(10),\r\n        repeat(Infinity, [\r\n          repeat(3, [\r\n            fire(DM, spd(s), direction(dir + \"-5\", \"relative\")),\r\n            repeat(\"$burst + 1\", [\r\n              fire(R2, spdSeq(0), direction(+5, \"sequence\")),\r\n              fire(R2, spdSeq(0), direction(+5, \"sequence\")),\r\n              fire(R2, spdSeq(0), direction(+5, \"sequence\")),\r\n              fire(DM, spdSeq(0.15), direction(-15, \"sequence\")),\r\n            ]),\r\n            interval(10),\r\n          ]),\r\n          interval(50),\r\n        ]),\r\n      ]),\r\n    });\r\n  };\r\n  peach.danmaku.forward3way = forward3way(1, 0);\r\n  peach.danmaku.forward3wayR1 = forward3way(1, -5);\r\n  peach.danmaku.forward3wayL1 = forward3way(1, +5);\r\n  peach.danmaku.forward3wayR2 = forward3way(1, -15);\r\n  peach.danmaku.forward3wayL2 = forward3way(1, +15);\r\n  peach.danmaku.forward3wayF = forward3way(1.2, 0);\r\n  peach.danmaku.forward3wayFR1 = forward3way(1.2, -5);\r\n  peach.danmaku.forward3wayFL1 = forward3way(1.2, +5);\r\n  peach.danmaku.forward3wayFR2 = forward3way(1.2, -15);\r\n  peach.danmaku.forward3wayFL2 = forward3way(1.2, +15);\r\n\r\n});\r\n","phina.namespace(function() {\r\n\r\n  peach.danmaku = peach.danmaku || {};\r\n\r\n  var action = bulletml.dsl.action;\r\n  var actionRef = bulletml.dsl.actionRef;\r\n  var bullet = bulletml.dsl.bullet;\r\n  var bulletRef = bulletml.dsl.bulletRef;\r\n  var fire = bulletml.dsl.fire;\r\n  var fireRef = bulletml.dsl.fireRef;\r\n  var changeDirection = bulletml.dsl.changeDirection;\r\n  var changeSpeed = bulletml.dsl.changeSpeed;\r\n  var accel = bulletml.dsl.accel;\r\n  var wait = bulletml.dsl.wait;\r\n  var vanish = bulletml.dsl.vanish;\r\n  var repeat = bulletml.dsl.repeat;\r\n  var bindVar = bulletml.dsl.bindVar;\r\n  var notify = bulletml.dsl.notify;\r\n  var direction = bulletml.dsl.direction;\r\n  var speed = bulletml.dsl.speed;\r\n  var horizontal = bulletml.dsl.horizontal;\r\n  var vertical = bulletml.dsl.vertical;\r\n  var fireOption = bulletml.dsl.fireOption;\r\n  var offsetX = bulletml.dsl.offsetX;\r\n  var offsetY = bulletml.dsl.offsetY;\r\n  var autonomy = bulletml.dsl.autonomy;\r\n\r\n  var interval = function(v) {\r\n    return wait(\"{0} * (0.3 + (1.0 - $densityRank) * 0.7)\".format(v));\r\n  };\r\n  var spd = function(v) {\r\n    return speed(\"{0} * (1.0 + $speedRank * 2.0)\".format(v));\r\n  };\r\n  var spdSeq = function(v) {\r\n    return speed(\"{0} * (1.0 + $speedRank * 2.0)\".format(v), \"sequence\");\r\n  };\r\n\r\n  var R0 = function(action) {\r\n    return bullet(action, {\r\n      type: 4\r\n    });\r\n  };\r\n  var R1 = function(action) {\r\n    return bullet(action, {\r\n      type: 5\r\n    });\r\n  };\r\n  var R2 = function(action) {\r\n    return bullet(action, {\r\n      type: 6\r\n    });\r\n  };\r\n  var R3 = function(action) {\r\n    return bullet(action, {\r\n      type: 7\r\n    });\r\n  };\r\n  var B4 = function(action) {\r\n    return bullet(action, {\r\n      type: 8\r\n    });\r\n  };\r\n  var B5 = function(action) {\r\n    return bullet(action, {\r\n      type: 9\r\n    });\r\n  };\r\n  var R4 = function(action) {\r\n    return bullet(action, {\r\n      type: 10\r\n    });\r\n  };\r\n  var R5 = function(action) {\r\n    return bullet(action, {\r\n      type: 11\r\n    });\r\n  };\r\n  var DM = function(action) {\r\n    return bullet(action, {\r\n      dummy: true\r\n    });\r\n  };\r\n\r\n  // 黒川\r\n  peach.danmaku.kurokawa1 = new bulletml.Root({\r\n    top: action([\r\n      interval(20),\r\n      repeat(Infinity, [\r\n        repeat(3, [\r\n          fire(DM, spd(1.2)),\r\n          repeat(3, [\r\n            fire(R0, spdSeq(0), direction(0, \"sequence\")),\r\n            wait(6),\r\n          ]),\r\n          interval(12),\r\n        ]),\r\n        interval(50),\r\n      ]),\r\n    ]),\r\n  });\r\n\r\n  // 秋元\r\n  peach.danmaku.akimoto1 = new bulletml.Root({\r\n    top0: action([\r\n      repeat(Infinity, [\r\n        interval(20),\r\n        fire(R2, spd(1.0), direction(-30)),\r\n        repeat(8, [\r\n          fire(R2, spdSeq(0), direction(60 / 8, \"sequence\")),\r\n        ]),\r\n        interval(80),\r\n      ]),\r\n    ]),\r\n    top1: action([\r\n      repeat(Infinity, [\r\n        interval(50),\r\n        fire(R1, spd(1.2), direction(-10)),\r\n        repeat(6, [\r\n          fire(R1, spdSeq(0), direction(20 / 6, \"sequence\")),\r\n        ]),\r\n        interval(50),\r\n      ]),\r\n    ]),\r\n  });\r\n\r\n  // 黄瀬\r\n  peach.danmaku.kise1 = new bulletml.Root({\r\n    top: action([\r\n      interval(20),\r\n      repeat(Infinity, [\r\n        fire(DM, spd(0.6)),\r\n        repeat(5, [\r\n          repeat(9, [\r\n            fire(R4, spdSeq(0.02), direction(360 / (9 - 1), \"sequence\")),\r\n          ]),\r\n          wait(4),\r\n          fire(DM, direction(7, \"sequence\"), spd(0.6)),\r\n        ]),\r\n        interval(50),\r\n      ]),\r\n    ]),\r\n  });\r\n\r\n  // 雪城1\r\n  peach.danmaku.yukishiro1 = new bulletml.Root({\r\n    top: action([\r\n      wait(120),\r\n      fire(DM, spd(0.6)),\r\n      repeat(3, [\r\n        bindVar(\"dd\", \"$loop.index\"),\r\n        fire(R4, spdSeq(0.08), direction(-60)),\r\n        repeat(8, [\r\n          repeat(8, [\r\n            fire(R4, spdSeq(0), direction(120 / 8, \"sequence\")),\r\n          ]),\r\n          wait(5),\r\n          fire(R4, spdSeq(0), direction(\"-120 + $dd * 1.4\", \"sequence\")),\r\n        ]),\r\n        wait(30),\r\n        fire(R4, spdSeq(0.08), direction(-60)),\r\n        repeat(8, [\r\n          repeat(8, [\r\n            fire(R4, spdSeq(0), direction(120 / 8, \"sequence\")),\r\n          ]),\r\n          wait(5),\r\n          fire(R4, spdSeq(0), direction(\"-120 - ($dd + 1) * 1.4\", \"sequence\")),\r\n        ]),\r\n        wait(30),\r\n      ]),\r\n      notify(\"end\", {\r\n        next: \"yukishiro2\"\r\n      }),\r\n    ]),\r\n  });\r\n  // 雪城2\r\n  peach.danmaku.yukishiro2 = new bulletml.Root({\r\n    top: action([\r\n      interval(60),\r\n      repeat(10, [\r\n        fire(DM(actionRef(\"b\")), speed(10), direction(-90, \"absolute\")),\r\n        fire(DM(actionRef(\"b\")), speed(10), direction(+90, \"absolute\")),\r\n        interval(30),\r\n      ]),\r\n      notify(\"end\", {\r\n        next: \"yukishiro3\"\r\n      }),\r\n    ]),\r\n    b: action([\r\n      wait(2),\r\n      fire(R2, spd(0.9), direction(-60)),\r\n      repeat(10, [\r\n        fire(R2, spdSeq(0), direction(120 / 10, \"sequence\")),\r\n      ]),\r\n    ]),\r\n  });\r\n  // 雪城3\r\n  peach.danmaku.yukishiro3 = new bulletml.Root({\r\n    top: action([\r\n      interval(60),\r\n      repeat(6, [\r\n        bindVar(\"p\", \"$loop.index\"),\r\n        repeat(10, [\r\n          fire(DM(actionRef(\"b\", 180 - 10, \"-($loop.index + $p * 6)\")), speed(10), direction(-90, \"absolute\")),\r\n          fire(DM(actionRef(\"b\", 180 + 10, \"+($loop.index + $p * 6)\")), speed(10), direction(+90, \"absolute\")),\r\n          interval(8),\r\n        ]),\r\n        interval(25),\r\n      ]),\r\n      notify(\"end\", {\r\n        next: \"yukishiro1\"\r\n      }),\r\n    ]),\r\n    b: action([\r\n      wait(2),\r\n      fire(R4, spd(0.7), direction(\"$1 + Math.sin($2 * 0.35) * 30 - 10\", \"absolute\")),\r\n      fire(R5, spdSeq(0), direction(10, \"sequence\")),\r\n      fire(R4, spdSeq(0), direction(10, \"sequence\")),\r\n    ]),\r\n  });\r\n\r\n  // 美墨1-1\r\n  peach.danmaku.misumi11 = new bulletml.Root({\r\n    top: action([\r\n      notify(\"end\", {\r\n        next: \"misumi12\",\r\n      }),\r\n    ]),\r\n  });\r\n  // 美墨1-2\r\n  peach.danmaku.misumi12 = new bulletml.Root({\r\n    top: action([\r\n      notify(\"end\", {\r\n        next: \"misumi13\",\r\n      }),\r\n    ]),\r\n  });\r\n  // 美墨1-3\r\n  peach.danmaku.misumi13 = new bulletml.Root({\r\n    top: action([\r\n      notify(\"end\", {\r\n        next: \"misumi11\",\r\n      }),\r\n    ]),\r\n  });\r\n  // 美墨2-1\r\n  peach.danmaku.misumi21 = new bulletml.Root({\r\n    top: action([\r\n      notify(\"end\", {\r\n        next: \"misumi22\",\r\n      }),\r\n    ]),\r\n  });\r\n  // 美墨2-2\r\n  peach.danmaku.misumi22 = new bulletml.Root({\r\n    top: action([\r\n      notify(\"end\", {\r\n        next: \"misumi23\",\r\n      }),\r\n    ]),\r\n  });\r\n  // 美墨2-3\r\n  peach.danmaku.misumi23 = new bulletml.Root({\r\n    top: action([\r\n      notify(\"end\", {\r\n        next: \"misumi21\",\r\n      }),\r\n    ]),\r\n  });\r\n  // 美墨3-1\r\n  peach.danmaku.misumi31 = new bulletml.Root({\r\n    top: action([\r\n      notify(\"end\", {\r\n        next: \"misumi31\",\r\n      }),\r\n    ]),\r\n  });\r\n\r\n});\r\n","phina.namespace(function() {\r\n\r\n  phina.define(\"peach.Bullet\", {\r\n    superClass: \"peach.Vox\",\r\n\r\n    runner: null,\r\n    active: false,\r\n\r\n    init: function(assetName) {\r\n      this.superInit(assetName);\r\n    },\r\n\r\n    update: function(app) {\r\n      var runner = this.runner;\r\n      if (runner) {\r\n        var bx = this.x;\r\n        var by = this.z;\r\n        runner.x = bx;\r\n        runner.y = by;\r\n        runner.update();\r\n        var dx = runner.x - bx;\r\n        var dy = runner.y - by;\r\n        \r\n        this.rotationY = Math.atan2(-dy, dx).toDegree();\r\n\r\n        this.x += dx * peach.Bullet.globalSpeedRate;\r\n        this.z += dy * peach.Bullet.globalSpeedRate;\r\n      }\r\n    },\r\n\r\n    spawn: function(runner, spec) {\r\n      this.x = runner.x;\r\n      this.y = runner.y;\r\n      this.runner = runner;\r\n      this.visible = !spec.dummy;\r\n      this.active = true;\r\n\r\n      this.radius = 5; // TODO\r\n\r\n      return this;\r\n    },\r\n\r\n    erase: function() {\r\n      if (!this.visible) {\r\n        this.remove();\r\n      }\r\n\r\n      this.active = false;\r\n      this.runner.fireable = false;\r\n      return this;\r\n    },\r\n\r\n    hitTest: function(_x, _z) {\r\n      if (!this.visible || !this.active || !this.parent) return false;\r\n\r\n      var x = _x - this.x;\r\n      var z = _z - this.z;\r\n\r\n      if ((x * x + z * z) < (this.radius * this.radius)) {\r\n        return true;\r\n      }\r\n      return false;\r\n    },\r\n\r\n    _static: {\r\n      globalSpeedRate: 1.0,\r\n    },\r\n\r\n  });\r\n\r\n});\r\n","phina.namespace(function() {\r\n\r\n  phina.define(\"peach.Ground\", {\r\n    superClass: \"peach.ThreeElement\",\r\n\r\n    init: function() {\r\n      var geometry = new THREE.Geometry();\r\n      var r = phina.util.Random(652);\r\n      var simplexNoise = new SimplexNoise(r);\r\n\r\n      for (var x = -100; x <= 100; x++) {\r\n        for (var z = -100; z <= 100; z++) {\r\n          var vertex = new THREE.Vector3();\r\n          vertex.x = x * 200;\r\n          vertex.y = 0;\r\n          vertex.y += simplexNoise.noise(x / 5, z / 5) * 200;\r\n          vertex.y += simplexNoise.noise(x / 20, z / 20) * 400;\r\n          vertex.y += simplexNoise.noise(x / 200, z / 200) * 800;\r\n          vertex.z = z * 200;\r\n          geometry.vertices.push(vertex);\r\n\r\n          var color = new THREE.Color().setHSL(0.3, 0.6, 0.5 + vertex.y / 1000);\r\n          geometry.colors.push(color);\r\n        }\r\n      }\r\n\r\n      var material = peach.VoxAsset.createMaterial();\r\n      material.size = 75;\r\n      material.fog = true;\r\n      this.superInit(new THREE.Points(geometry, material));\r\n    },\r\n\r\n    update: function() {\r\n      if (40000 <= this.x) this.x += -80000;\r\n      else if (this.x < -40000) this.x += 80000;\r\n\r\n      if (40000 <= this.z) this.z += -80000;\r\n      else if (this.z < -40000) this.z += 80000;\r\n    },\r\n\r\n    _static: {\r\n      generate: function(scrollDirection, scrollSpeed) {\r\n        var parent = peach.ThreeElement().setRotation(0, scrollDirection, 0);\r\n        parent.scrollDirection = scrollDirection;\r\n        parent.scrollSpeed = scrollSpeed;\r\n\r\n        peach.Ground()\r\n          .setScale(1, 1, 1)\r\n          .setPosition(20000, 0, 20000)\r\n          .addChildTo(parent);\r\n        peach.Ground()\r\n          .setScale(-1, 1, 1)\r\n          .setPosition(-20000, 0, 20000)\r\n          .addChildTo(parent);\r\n        peach.Ground()\r\n          .setScale(1, 1, -1)\r\n          .setPosition(20000, 0, -20000)\r\n          .addChildTo(parent);\r\n        peach.Ground()\r\n          .setScale(-1, 1, -1)\r\n          .setPosition(-20000, 0, -20000)\r\n          .addChildTo(parent);\r\n\r\n        parent.on(\"enterframe\", function() {\r\n          var d = this.scrollDirection;\r\n          var s = this.scrollSpeed;\r\n          this.children.forEach(function(c) {\r\n            c.x += Math.sin(-d) * s;\r\n            c.z += Math.cos(-d) * s;\r\n          })\r\n        });\r\n\r\n        return parent;\r\n      },\r\n    },\r\n\r\n  });\r\n\r\n});\r\n","phina.namespace(function() {\r\n\r\n  phina.define(\"peach.Label\", {\r\n    superClass: \"phina.display.Label\",\r\n\r\n    init: function(text, options) {\r\n      this.superInit({\r\n        text: text,\r\n        fontFamily: \"main\",\r\n        fontSize: W * 0.08,\r\n        fill: \"white\",\r\n      }.$extend(options));\r\n    },\r\n    \r\n    update: function(app) {\r\n      this.alpha = 0.75 + Math.sin(app.ticker.frame * 0.2) * 0.25;\r\n    }\r\n  });\r\n\r\n});\r\n","phina.namespace(function() {\r\n  var TEMP_V0 = new THREE.Vector3();\r\n  var TEMP_V1 = new THREE.Vector3();\r\n  var TEMP_Q = new THREE.Quaternion();\r\n  var VECTOR3_Y = new THREE.Vector3(0, 1, 0);\r\n  var ROT_UNIT = (5).toRadian();\r\n\r\n  var GUN_POSITION = new THREE.Vector3();\r\n\r\n  phina.define(\"peach.Player\", {\r\n    superClass: \"peach.ThreeElement\",\r\n\r\n    direction: 0,\r\n\r\n    init: function() {\r\n      this.superInit();\r\n\r\n      this.bodyParent = peach.ThreeElement().addChildTo(this);\r\n      this.body = peach.Vox(\"player\").addChildTo(this.bodyParent);\r\n      this.bit = peach.Vox(\"bit\").addChildTo(this);\r\n\r\n      this.body.$t.material.size = 15;\r\n      this.bit.$t.material.size = 15;\r\n\r\n      this.speed = 0;\r\n      this.speedMax = 60;\r\n    },\r\n\r\n    _normalizeAngle: function(angle) {\r\n      return (angle + Math.PI * 3) % (Math.PI * 2) - Math.PI;\r\n    },\r\n\r\n    update: function(app) {\r\n      var keyboard = app.keyboard;\r\n      var gp = app.gamepadManager.get(0);\r\n\r\n      var v = keyboard.getKeyDirection();\r\n      // var v = gp.getStickDirection();\r\n      if (v && v.lengthSquared() > (0.5 * 0.5)) {\r\n        if (!keyboard.getKey(\"z\")) {\r\n          var toAngle = this._normalizeAngle(Math.atan2(v.x, v.y));\r\n          // var toAngle = Math.atan2(-v.x, -v.y);\r\n          var delta = this._normalizeAngle(toAngle - this.direction);\r\n          if (delta != 0) {\r\n            if (Math.abs(delta) > ROT_UNIT) {\r\n              this.direction += Math.abs(delta) / delta * ROT_UNIT;\r\n            } else {\r\n              this.direction = toAngle;\r\n            }\r\n            this.direction = this._normalizeAngle(this.direction);\r\n          }\r\n        }\r\n\r\n        this.speed = Math.min(this.speed + 6.5, this.speedMax);\r\n\r\n        this.x += v.x * this.speed;\r\n        this.z += v.y * this.speed;\r\n        this.body.rotationY = this.direction.toDegree();\r\n        this.bit.rotationY = this.direction.toDegree();\r\n\r\n        TEMP_V0.set(v.x, 0, v.y).normalize();\r\n        TEMP_V1.set(v.x, -0.75, v.y).normalize();\r\n        var angle = Math.acos(TEMP_V0.dot(TEMP_V1));\r\n        TEMP_Q.setFromAxisAngle(TEMP_V0.applyAxisAngle(VECTOR3_Y, Math.PI / 2), angle);\r\n      } else {\r\n        this.speed = 0;\r\n        TEMP_Q.set(0, 0, 0, 1);\r\n      }\r\n      this.bodyParent.$t.quaternion.slerp(TEMP_Q, 0.1);\r\n\r\n      if (keyboard.getKey(\"z\") && app.ticker.frame % 5 === 0) {\r\n        this.fireShot(GUN_POSITION.set(-400, 0, -100));\r\n        this.fireShot(GUN_POSITION.set(+400, 0, -100));\r\n      }\r\n    },\r\n\r\n    fireShot: function(gunPosition) {\r\n      // TODO\r\n\r\n      var d = this.direction + Math.randfloat(-0.1, 0.1) - Math.PI / 2;\r\n      var p = peach.Vox(\"bullet01\")\r\n        .addChildTo(this.parent)\r\n        .on(\"enterframe\", function() {\r\n          this.forward(300);\r\n        });\r\n\r\n      var m = this.bit.$t.matrixWorld;\r\n      p.$t.position.copy(gunPosition.applyMatrix4(m));\r\n      p.$t.rotation.setFromRotationMatrix(m);\r\n\r\n      p.tweener\r\n        .wait(200 + Math.randint(-8, 8))\r\n        .call(function() {\r\n          // var pos = p.$t.position;\r\n          // (20).times(function() {\r\n          //   var to = new THREE.Vector3(Math.randint(-1, 1), Math.randint(-1, 1), Math.randint(-1, 1))\r\n          //     .normalize()\r\n          //     .multiplyScalar(20);\r\n          //   peach.Particle()\r\n          //     .setPosition(pos.x, pos.y, pos.z)\r\n          //     .addChildTo(p.parent)\r\n          //     .on(\"enterframe\", function(e) {\r\n          //       this.position.add(to);\r\n          //     });\r\n          // });\r\n          p.remove();\r\n        });\r\n    },\r\n\r\n  });\r\n\r\n});\r\n","phina.namespace(function() {\r\n  \r\n  var TEMP_VECTOR = new THREE.Vector3();\r\n\r\n  phina.define(\"peach.ThreeElement\", {\r\n    superClass: \"phina.app.Element\",\r\n\r\n    $t: null,\r\n\r\n    init: function(threeObject) {\r\n      this.superInit();\r\n      this.$t = threeObject || new THREE.Object3D();\r\n\r\n      this.$t.$p = this;\r\n    },\r\n\r\n    forward: function(distance) {\r\n      TEMP_VECTOR\r\n        .set(0, 0, -distance)\r\n        .applyQuaternion(this.$t.quaternion);\r\n      this.position.add(TEMP_VECTOR);\r\n    },\r\n\r\n    addChild: function(child) {\r\n      this.superMethod(\"addChild\", child);\r\n      if (child.$t) this.$t.add(child.$t);\r\n      return this;\r\n    },\r\n    removeChild: function(child) {\r\n      this.superMethod(\"removeChild\", child);\r\n      if (child.$t) this.$t.remove(child.$t);\r\n      return this;\r\n    },\r\n\r\n    setPosition: function(x, y, z) {\r\n      this.$t.position.set(x, y, z);\r\n      return this;\r\n    },\r\n    setScale: function(x, y, z) {\r\n      if (arguments.length === 1) {\r\n        this.$t.scale.set(x, x, x);\r\n      } else {\r\n        this.$t.scale.set(x, y, z);\r\n      }\r\n      return this;\r\n    },\r\n    setRotation: function(x, y, z) {\r\n      this.$t.rotation.set(x, y, z);\r\n      return this;\r\n    },\r\n\r\n    _accessor: {\r\n      visible: {\r\n        get: function() {\r\n          return this.$t.visible;\r\n        },\r\n        set: function(v) {\r\n          this.$t.visible = v;\r\n        }\r\n      },\r\n      matrix: {\r\n        get: function() {\r\n          return this.$t.matrix;\r\n        }\r\n      },\r\n      position: {\r\n        get: function() {\r\n          return this.$t.position;\r\n        },\r\n        set: function(v) {\r\n          this.$t.position = v;\r\n        }\r\n      },\r\n      x: {\r\n        get: function() {\r\n          return this.$t.position.x;\r\n        },\r\n        set: function(v) {\r\n          this.$t.position.x = v;\r\n        }\r\n      },\r\n      y: {\r\n        get: function() {\r\n          return this.$t.position.y;\r\n        },\r\n        set: function(v) {\r\n          this.$t.position.y = v;\r\n        }\r\n      },\r\n      z: {\r\n        get: function() {\r\n          return this.$t.position.z;\r\n        },\r\n        set: function(v) {\r\n          this.$t.position.z = v;\r\n        }\r\n      },\r\n      scaleX: {\r\n        get: function() {\r\n          return this.$t.scale.x;\r\n        },\r\n        set: function(v) {\r\n          this.$t.scale.x = v;\r\n        }\r\n      },\r\n      scaleY: {\r\n        get: function() {\r\n          return this.$t.scale.y;\r\n        },\r\n        set: function(v) {\r\n          this.$t.scale.y = v;\r\n        }\r\n      },\r\n      scaleZ: {\r\n        get: function() {\r\n          return this.$t.scale.z;\r\n        },\r\n        set: function(v) {\r\n          this.$t.scale.z = v;\r\n        }\r\n      },\r\n      rotationX: {\r\n        get: function() {\r\n          return this.$t.rotation.x.toDegree();\r\n        },\r\n        set: function(v) {\r\n          this.$t.rotation.x = v.toRadian();\r\n        }\r\n      },\r\n      rotationY: {\r\n        get: function() {\r\n          return this.$t.rotation.y.toDegree();\r\n        },\r\n        set: function(v) {\r\n          this.$t.rotation.y = v.toRadian();\r\n        }\r\n      },\r\n      rotationZ: {\r\n        get: function() {\r\n          return this.$t.rotation.z.toDegree();\r\n        },\r\n        set: function(v) {\r\n          this.$t.rotation.z = v.toRadian();\r\n        }\r\n      },\r\n    }\r\n  });\r\n\r\n});\r\n","phina.namespace(function() {\r\n\r\n  phina.define(\"peach.Vox\", {\r\n    superClass: \"peach.ThreeElement\",\r\n\r\n    init: function(asset) {\r\n      if (typeof(asset) === \"string\") {\r\n        this.superInit(phina.asset.AssetManager.get(\"vox\", asset).clone());\r\n      } else {\r\n        this.superInit(asset);\r\n      }\r\n    }\r\n  });\r\n\r\n});\r\n","phina.namespace(function() {\r\n  \r\n  var SCALE = 75;\r\n\r\n  phina.define(\"peach.VoxAsset\", {\r\n    superClass: \"phina.asset.Asset\",\r\n\r\n    init: function() {\r\n      this.superInit();\r\n    },\r\n\r\n    _load: function(resolve) {\r\n      var url = this.src.url;\r\n      var scale = SCALE * (this.src.scale || 1);\r\n      var parser = new vox.Parser();\r\n      parser.parse(url).then(function(data) {\r\n\r\n        var voxels = data.voxels;\r\n        var palette = data.palette;\r\n\r\n        var geometry = new THREE.Geometry();\r\n        for (var i = 0, len = voxels.length; i < len; i++) {\r\n          var voxel = voxels[i];\r\n          var p = palette[voxel.colorIndex];\r\n\r\n          var vertex = new THREE.Vector3();\r\n          vertex.x = voxel.x * scale;\r\n          vertex.y = voxel.z * scale;\r\n          vertex.z = voxel.y * -scale;\r\n          geometry.vertices.push(vertex);\r\n\r\n          var color = new THREE.Color();\r\n          color.r = p.r / 255;\r\n          color.g = p.g / 255;\r\n          color.b = p.b / 255;\r\n          geometry.colors.push(color);\r\n        }\r\n        geometry.translate(data.size.x / -2 * scale, data.size.z / -2 * scale, data.size.y / +2 * scale);\r\n\r\n        var material = peach.VoxAsset.createMaterial();\r\n\r\n        resolve(new THREE.Points(geometry, material));\r\n      });\r\n    },\r\n\r\n    _static: {\r\n      createMaterial: function() {\r\n        return new THREE.PointsMaterial({\r\n          size: 75,\r\n          sizeAttenuation: true,\r\n          vertexColors: THREE.VertexColors,\r\n          fog: false,\r\n          transparent: false,\r\n          map: peach.VoxAsset.commonTexture,\r\n        });\r\n      },\r\n\r\n      commonTexture: (function() {\r\n        var canvas = phina.graphics.Canvas().setSize(64, 64);\r\n        canvas.strokeStyle = \"rgb(180, 180, 180)\";\r\n        canvas.fillStyle = (function() {\r\n          var grad = canvas.context.createLinearGradient(0, 0, 64, 64);\r\n          grad.addColorStop(0.0, \"rgb(255, 255, 255)\");\r\n          grad.addColorStop(1.0, \"rgb(200, 200, 200)\");\r\n          return grad;\r\n        })();\r\n        canvas.fillRect(0, 0, 64, 64);\r\n        canvas.strokeStyle = \"rgb(180, 180, 180)\";\r\n        canvas.strokeRect(0, 0, 64, 64);\r\n\r\n        return new THREE.CanvasTexture(canvas.domElement);\r\n      })(),\r\n    },\r\n  });\r\n\r\n  phina.asset.AssetLoader.assetLoadFunctions[\"vox\"] = function(key, path) {\r\n    var voxelModel = peach.VoxAsset();\r\n    var flow = voxelModel.load(path);\r\n    return flow;\r\n  };\r\n\r\n});\r\n","phina.namespace(function() {\r\n\r\n  phina.define(\"peach.Particle\", {\r\n    superClass: \"peach.Vox\",\r\n\r\n    init: function() {\r\n      this.superInit(\"particle\");\r\n\r\n      this.$t.material = this.$t.material.clone();\r\n\r\n      this.material = this.$t.material;\r\n      this.material.fog = false;\r\n      this.material.blending = THREE.AdditiveBlending;\r\n      this.material.color = new THREE.Color(0xff6633);\r\n      this.material.transparent = true;\r\n      \r\n      this.tweener\r\n        .set({\r\n          size: 10,\r\n          // opacity: 1.0\r\n        })\r\n        .to({\r\n          size: 400,\r\n          // opacity: 1.0\r\n        }, 100, \"easeOutQuad\")\r\n        .to({\r\n          size: 1,\r\n          // opacity: 0.0\r\n        }, 300, \"easeInQuad\")\r\n        .call(function() {\r\n          this.remove();\r\n        }.bind(this));\r\n    },\r\n\r\n    _accessor: {\r\n      opacity: {\r\n        get: function() {\r\n          return this.material.opacity;\r\n        },\r\n        set: function(v) {\r\n          this.material.opacity = v;\r\n        }\r\n      },\r\n      size: {\r\n        get: function() {\r\n          return this.material.size;\r\n        },\r\n        set: function(v) {\r\n          this.material.size = v;\r\n        }\r\n      },\r\n    },\r\n  });\r\n\r\n});\r\n","phina.namespace(function() {\r\n\r\n  phina.define(\"peach.GameScene\", {\r\n    superClass: \"phina.display.DisplayScene\",\r\n\r\n    threeLayer: null,\r\n    scene: null,\r\n    camera: null,\r\n    cameraTarget: null,\r\n    light: null,\r\n    threeRenderer: null,\r\n\r\n    init: function() {\r\n      this.superInit({\r\n        backgroundColor: \"black\",\r\n        width: W,\r\n        height: H,\r\n      });\r\n\r\n      this.fromJSON({\r\n        children: {\r\n          threeLayer: {\r\n            className: \"phina.display.ThreeLayer\",\r\n            arguments: {\r\n              width: W,\r\n              height: H,\r\n            },\r\n            originX: 0,\r\n            originY: 0,\r\n          },\r\n        },\r\n      });\r\n\r\n      this.scene = this.threeLayer.scene;\r\n      this.camera = this.threeLayer.camera;\r\n      this.light = this.threeLayer.light;\r\n      this.threeRenderer = this.threeLayer.renderer;\r\n\r\n      this.scene.fog = new THREE.FogExp2(0x000044, 0.00012);\r\n\r\n      this.camera.position.set(\r\n        0,\r\n        Math.sin((60).toRadian()) * 4000,\r\n        Math.cos((60).toRadian()) * 4000\r\n      );\r\n      this.camera.updateProjectionMatrix();\r\n      this.cameraTarget = peach.ThreeElement().addChildTo(this);\r\n\r\n      this.threeRenderer.setClearColor(0x000000);\r\n\r\n      var self = this;\r\n\r\n      this.player = peach.Player().addChildTo(this);\r\n      \r\n      peach.Vox(\"misumi\")\r\n        .setPosition(0, 0, -3000)\r\n        .addChildTo(this);\r\n\r\n      // this.genAxis();\r\n\r\n      peach.Ground.generate((-15).toRadian(), 90)\r\n        .setPosition(0, -3000, 0)\r\n        .addChildTo(this);\r\n\r\n      var test = phina.asset.AssetManager.get(\"vox\", \"bullet01\");\r\n      test.material.blending = THREE.AdditiveBlending;\r\n      // test.material.transparent = true;\r\n      var test = phina.asset.AssetManager.get(\"vox\", \"bullet02\");\r\n      test.material.blending = THREE.AdditiveBlending;\r\n      // test.material.transparent = true;\r\n      for (var x = -4; x < 4; x++) {\r\n        for (var y = -4; y < 4; y++) {\r\n          var p = peach.Vox(\"bullet02\")\r\n            .setPosition(0, 0, -6000)\r\n            .addChildTo(self)\r\n            .on(\"enterframe\", function() {\r\n              this.x += Math.cos(this.dir) * this.spd;\r\n              this.z -= Math.sin(this.dir) * this.spd;\r\n            });\r\n          p.dir = Math.randfloat(0, Math.PI * 2);\r\n          p.spd = Math.randint(50, 90);\r\n          p.rotationY = p.dir.toDegree()- 90;\r\n          p.tweener.wait(Math.randint(2000, 2800)).call(function() {\r\n            this.x = 0;\r\n            this.z = -6000;\r\n          }.bind(p)).setLoop(true);\r\n        }\r\n      }\r\n    },\r\n\r\n    genAxis: function() {\r\n      var material, geometry;\r\n\r\n      material = new THREE.LineBasicMaterial({\r\n        color: 0xffffff\r\n      });\r\n      geometry = new THREE.Geometry();\r\n      geometry.vertices.push(\r\n        new THREE.Vector3(-50000, 0, 0),\r\n        new THREE.Vector3(50000, 0, 0)\r\n      );\r\n      peach.ThreeElement(new THREE.Line(geometry, material)).addChildTo(this);\r\n\r\n      material = new THREE.LineBasicMaterial({\r\n        color: 0xffffff\r\n      });\r\n      geometry = new THREE.Geometry();\r\n      geometry.vertices.push(\r\n        new THREE.Vector3(0, -50000, 0),\r\n        new THREE.Vector3(0, 50000, 0)\r\n      );\r\n      peach.ThreeElement(new THREE.Line(geometry, material)).addChildTo(this);\r\n\r\n      material = new THREE.LineBasicMaterial({\r\n        color: 0xffffff\r\n      });\r\n      geometry = new THREE.Geometry();\r\n      geometry.vertices.push(\r\n        new THREE.Vector3(0, 0, -50000),\r\n        new THREE.Vector3(0, 0, 50000)\r\n      );\r\n      peach.ThreeElement(new THREE.Line(geometry, material)).addChildTo(this);\r\n    },\r\n\r\n    update: function(app) {\r\n      // this.camera.position.set(Math.cos(app.ticker.frame * 0.001) * 1000, 1000, Math.sin(app.ticker.frame * 0.001) * 2000);\r\n      this.camera.lookAt(this.cameraTarget.position);\r\n    },\r\n\r\n    addChild: function(child) {\r\n      this.superMethod(\"addChild\", child);\r\n      if (child.$t) this.scene.add(child.$t);\r\n      return this;\r\n    },\r\n    removeChild: function(child) {\r\n      this.superMethod(\"removeChild\", child);\r\n      if (child.$t) this.scene.remove(child.$t);\r\n      return this;\r\n    },\r\n  });\r\n\r\n});\r\n","phina.namespace(function() {\r\n\r\n  phina.define(\"peach.LoadingScene\", {\r\n    superClass: \"phina.game.LoadingScene\",\r\n\r\n    init: function(param) {\r\n      var assets = {};\r\n      switch (param.assetType) {\r\n        case \"common\":\r\n          assets[\"font\"] = {\r\n            \"main\": \"asset/Orbitron-Regular.ttf\",\r\n          };\r\n          assets[\"vox\"] = {\r\n            \"player\": { url: \"asset/player.vox\", scale: 0.1, },\r\n            \"bit\": { url: \"asset/bit.vox\", scale: 0.1, },\r\n            \"bullet01\": { url: \"asset/bullet01.vox\", scale: 1, },\r\n            \"bullet02\": { url: \"asset/bullet02.vox\", scale: 1, },\r\n            \"particle\": { url: \"asset/particle.vox\", scale: 1, },\r\n            \"misumi\": { url: \"asset/misumi.vox\", scale: 1, },\r\n            \"test\": { url: \"asset/test.vox\", scale: 1, },\r\n          };\r\n          break;\r\n        case \"stage1\":\r\n          break;\r\n        case \"stage2\":\r\n          break;\r\n        case \"stage3\":\r\n          break;\r\n        case \"stage4\":\r\n          break;\r\n        case \"stage5\":\r\n          break;\r\n      }\r\n\r\n      this.superInit({\r\n        width: W,\r\n        height: H,\r\n        assets: assets\r\n      });\r\n    }\r\n\r\n  });\r\n\r\n});\r\n","phina.namespace(function() {\r\n\r\n  phina.define(\"peach.MainSequance\", {\r\n    superClass: \"phina.game.ManagerScene\",\r\n\r\n    init: function() {\r\n      this.superInit({\r\n        scenes: [{\r\n          label: \"loading0\",\r\n          className: \"peach.LoadingScene\",\r\n          arguments: {\r\n            assetType: \"common\",\r\n          },\r\n          nextLabel: \"title\",\r\n        }, {\r\n          label: \"title\",\r\n          className: \"peach.TitleScene\",\r\n        }, {\r\n          label: \"main\",\r\n          className: \"peach.GameScene\",\r\n        }, ],\r\n      });\r\n    },\r\n  });\r\n\r\n  phina.define(\"peach.ArcadeModeSequance\", {\r\n    superClass: \"phina.game.ManagerScene\",\r\n\r\n    init: function() {\r\n      this.superInit({\r\n        scenes: [],\r\n      });\r\n    },\r\n  });\r\n\r\n});\r\n","phina.define(\"peach.TestScene\", {\r\n  superClass: \"phina.display.DisplayScene\",\r\n\r\n  $t: null,\r\n\r\n  init: function() {\r\n    this.superInit({\r\n      backgroundColor: \"black\",\r\n      width: W,\r\n      height: H,\r\n    });\r\n\r\n    this.$t = phina.display.ThreeLayer({\r\n      width: W,\r\n      height: H,\r\n    });\r\n    this.$t.camera.position.y = 1500;\r\n    this.$t.camera.lookAt(new THREE.Vector3(0, 0, 0));\r\n    this.$t.renderer.setClearColor(0x000000);\r\n    this.$t.scene.fog = new THREE.Fog(0x000022, 500, 3000);\r\n    this.$t.addChildTo(this);\r\n\r\n    var scene = this;\r\n    (5).times(function(x) {\r\n      (5).times(function(z) {\r\n        var vox = peach.Vox(\"vox\").addChildTo(scene);\r\n        vox.x = -3000 + x * 1200;\r\n        vox.z = -3000 + z * 1200;\r\n      });\r\n    });\r\n    \r\n    this.on(\"enterframe\", function(e) {\r\n      var f = e.app.ticker.frame;\r\n      scene.$t.camera.position.x = Math.cos(f * 0.01) * 2000;\r\n      scene.$t.camera.position.z = Math.sin(f * 0.01) * 2000;\r\n      scene.$t.camera.lookAt(new THREE.Vector3(0, 200, 0));\r\n    })\r\n  },\r\n\r\n  addChild: function(child) {\r\n    this.superMethod(\"addChild\", child);\r\n    if (child.$t) this.$t.scene.add(child.$t);\r\n    return this;\r\n  },\r\n  removeChild: function(child) {\r\n    this.superMethod(\"removeChild\", child);\r\n    if (child.$t) this.$t.scene.remove(child.$t);\r\n    return this;\r\n  },\r\n});\r\n","phina.namespace(function() {\r\n\r\n  phina.define(\"peach.TitleScene\", {\r\n    superClass: \"phina.display.DisplayScene\",\r\n\r\n    init: function() {\r\n      this.superInit({\r\n        backgroundColor: \"black\",\r\n        width: W,\r\n        height: H,\r\n      });\r\n      peach.Label(\"Test\")\r\n        .setPosition(this.gridX.span(8), this.gridY.span(6))\r\n        .addChildTo(this);\r\n    },\r\n    \r\n    update: function(app) {\r\n      if (app.pointer.getPointingEnd() || app.keyboard.getKeyDown(\"z\")) {\r\n        this.exit();\r\n      }\r\n    }\r\n  });\r\n\r\n});\r\n"],"sourceRoot":"/source/"}